

#ifndef linkedListADT_h
#define linkedListADT_h



typedef struct llnode {
	void *dataPtr;
	struct llnode *link;
} LL_NODE;


typedef struct {
	int count; 	// number of LL_NODES in this linked list.
	LL_NODE *LL_head;
	int (*compare)( void *dataOne, void *dataTwo );
	void (*printData)( void *, void *, void *);
	void (*freeInternals)(void *);
} LL_HEADER;






// prototypes

void 		LL_insert		(LL_HEADER *list, void *dataPtr);
LL_HEADER	*LL_destroyList	(LL_HEADER *list);
int 		LL_searchList	(LL_HEADER *pList, LL_NODE **pPre, LL_NODE **pCur, void *targetData);
void 		LL_delete		(LL_HEADER *list, LL_NODE *pPre, LL_NODE *pCur);
void 		LL_traverseList	(LL_HEADER *list, void (*process)());


#endif
